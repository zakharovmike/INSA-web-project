# Define user to be used by worker processes
user nginx;

# Define the number of worker processes
worker_processes auto;

# Limit on the maximum number of open files for worker processes
worker_rlimit_nofile 33282;

# Define a file that will store the process ID of the main process
pid /var/run/nginx.pid;

# Configure error logging
error_log /var/log/nginx/error.log warn;
error_log /dev/stdout;

# Events directive
events {
	# Set the maximum number of simultaneous connections that can be opened by a worker process
	worker_connections 8192;
}

# HTTP directive
http {
	# Allow access for the specified networks or addresses
	allow 127.0.0.1;
	allow 10.0.0.0/8;
	allow 172.17.0.1;
	allow 172.16.0.0/12;
	allow 192.0.0.0/16;

	# Deny access for the specified networks or addresses
	deny all;

	# Set the maximum sizes
	variables_hash_max_size 1024;
	map_hash_max_size 2048;
	server_names_hash_max_size 1024;
	server_names_hash_bucket_size 1024;
	types_hash_max_size 1024;

	# Open file cache settings
	open_file_cache max=300;
	open_file_cache_errors on;

	# General timeout settings
	keepalive_timeout 10;
	client_header_timeout 10;
	client_body_timeout 10;
	send_timeout 10;

	# FastCGI timeout settings
	fastcgi_connect_timeout 10;
	fastcgi_send_timeout 10;
	fastcgi_read_timeout 10;

	# Proxy timeout settings
	proxy_connect_timeout 10;
	proxy_send_timeout 10;
	proxy_read_timeout 10;

	# Include MIME types definitions
	include /etc/nginx/mime.types;

	# Define the default MIME type of a response
	default_type application/octet-stream;

	# Enables adding comments to responses for MSIE clients
	msie_padding off;

	# Limit the maximum allowed number of ranges in byte-range requests
	max_ranges 0;

	# Charset settings
	charset utf-8;
	source_charset utf-8;

	# Default index file names
	index index.html index.htm;

	# Enable resetting timed out connections
	reset_timedout_connection on;

	# Disable keep-alive connections with misbehaving browsers
	keepalive_disable none;

	# Set the maximum number of requests that can be served through one keep-alive connection
	keepalive_requests 20;

	# Controls whether header fields with invalid names should be ignored
	ignore_invalid_headers on;

	# Disable the use of the primary server name
	server_name_in_redirect off;

	# Enable the use of sendfile()
	sendfile on;

	# TCP settings
	tcp_nodelay off;
	tcp_nopush on;

	# Disable emitting nginx version on error pages and in the “Server” response header field
	server_tokens off;

	# Set response headers for better security
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Frame-Options SAMEORIGIN;

	# Define log formats
	log_format combined_anon '$remote_addr_anon - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
	log_format main '$remote_addr $scheme://$host $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time $upstream_addr $upstream_cache_status';
	log_format main_anon '$remote_addr_anon $scheme://$host $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time $upstream_addr $upstream_cache_status';

	# Enable logging subrequests into access_log
	log_subrequest on;

	# Configure access logging
	access_log /var/log/nginx/bots.access.log main_anon if=$is_bot;
	access_log /var/log/nginx/access.log main_anon if=$is_human;
	access_log /dev/stdout;

	# Create a new variable
	map $remote_addr $ip1 {
		~(?P<ip>\d+\.\d+\.\d+)\. $ip;
		~(?P<ip>[^:]+:[^:]+): $ip;
		default 0.0.0;
	}

	# Create a new variable
	map $remote_addr $ip2 {
		default .0;
		"~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" .0;
		"~(?P<ip>[^:]+:[^:]+):" ::;
	}

	# Create a new variable
	map $ip1$ip2 $remote_addr_anon {
		default 0.0.0.0;
		"~(?P<ip>.*)" $ip;
	}

	# Create a new variable
	map $request_uri $bot_req {
		default 0;
		/robots.txt 1;
		/humans.txt 1;
	}

	# Create a new variable
	map $http_user_agent $bot_ua {
		default 0;
		~*(url|index|archive|spider|bot|crawl|\+http) 1;
		'' 1;
	}

	# Create a new variable
	map $bot_req$bot_ua $is_bot {
		default 0;
		~1 1;
	}

	# Create a new variable
	map $is_bot $is_human {
		default 1;
		~1 0;
	}

	# Create a new variable
	map $http_upgrade $connection_upgrade {
		default "upgrade";
	}

	# FastCGI cache settings
	fastcgi_cache_path /var/cache/nginx/ levels=1:1 keys_zone=phpCache:16m max_size=256m inactive=1d;

	# Set the shared memory zone and the maximum allowed number of connections for a given key value
	limit_conn_zone $binary_remote_addr zone=conPerIp:5m;

	# Set parameters for shared memory zones that will keep states for various keys
	limit_req_zone $binary_remote_addr zone=reqPerSec1:1m rate=1r/s;
	limit_req_zone $binary_remote_addr zone=reqPerSec10:1m rate=10r/s;
	limit_req_zone $binary_remote_addr zone=reqPerSec20:1m rate=20r/s;

	# Configuration for a virtual host
	server {
		# Set names of a virtual server
		server_name $hostname localhost;

		# Set port from which server will accept requests
		listen 443 default_server ssl http2;

		# SSL certificate paths
		ssl_certificate /etc/nginx/certs/cert.crt;
		ssl_certificate_key /etc/nginx/certs/cert.key;

		# SSL configuration
		ssl_session_cache shared:SSL:10m;
		ssl_session_timeout 10m;
		ssl_prefer_server_ciphers on;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
		add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' always;

		# Set variables
		set $remote_root /app/public;
		set $remote_index index.php;

		# Set the root directory for requests
		root $remote_root/;

		# Default index file names
		index index.html index.htm index.php;

		# Location matching for all . files
		location ~ /\. {
			# Deny all access
			deny all;
		}

		# Location matching for ACME-challenge requests
		location ^~ /.well-known/acme-challenge/ {
			# Allow all access
			allow all;
		}

		# Location matching for phpMyAdmin requests
		location ^~ /phpmyadmin/ {
			# Set upstream endpoint for phpMyAdmin
			set $phpmyadmin_upstream_endpoint https://phpmyadmin:4000;

			# Set connection limit
			limit_conn conPerIp 100;

			# Configure name servers used to resolve names of upstream servers into addresses
			resolver 127.0.0.11 valid=5s;

			# Rewrite URI
			rewrite ^/phpmyadmin(/.*) $1 break;

			# Proxy settings
			proxy_pass $phpmyadmin_upstream_endpoint;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
		}

		# Location matching for Swagger requests
		location ^~ /swagger/ {
			# Set upstream endpoint for Swagger
			set $swagger_upstream_endpoint https://swagger:5000;

			# Set connection limit
			limit_conn conPerIp 100;

			# Configure name servers used to resolve names of upstream servers into addresses
			resolver 127.0.0.11 valid=5s;

			# Rewrite URI
			rewrite ^/swagger(/.*) $1 break;

			# Proxy settings
			proxy_pass $swagger_upstream_endpoint;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
		}

		# Match all locations
		location / {
			# Assign a variable
			set $request_uri_real $uri;

			# Specify paths the server should try to access
			try_files $uri $uri/ /$remote_index$uri$is_args$args;

			# Check for index.php file in the request URI
			if ($request_uri ~* "^(.*/)index\.php(/?)(.*)") {
				# Redirect to a path without index.php file
				return 301 $1$3;
			}
		}

		# Match all files with PHP extention
		location ~ ^.+\.php(?:/.*)?$ {
			# Assign a variable
			# set $request_uri_real $uri;

			# Check for index.php file in the request URI
			if ($request_uri ~* "^(.*/)index\.php(/?)(.*)") {
				# Redirect to a path without index.php file
				# return 301 $1$3;
				set $request_uri_real $1$3;
			}

			# FastCGI parameters
			fastcgi_param SERVER_SIGNATURE nginx;
			fastcgi_param SERVER_SOFTWARE nginx;
			fastcgi_param SERVER_NAME $server_name;
			fastcgi_param SERVER_ADDR $server_addr;
			fastcgi_param SERVER_PORT $server_port;
			fastcgi_param SERVER_PROTOCOL $server_protocol;
			fastcgi_param SERVER_ADMIN admin@$server_name;
			fastcgi_param HTTPS $https if_not_empty;
			fastcgi_param GATEWAY_INTERFACE CGI/1.1;
			fastcgi_param DOCUMENT_ROOT $remote_root/;
			fastcgi_param DOCUMENT_URI $document_uri;
			fastcgi_param QUERY_STRING $query_string;
			fastcgi_param SCRIPT_FILENAME $remote_root$fastcgi_script_name;
			fastcgi_param SCRIPT_NAME $fastcgi_script_name;
			fastcgi_param REDIRECT_STATUS 200;
			fastcgi_param REDIRECT_QUERY_STRING $query_string;
			fastcgi_param REDIRECT_URL $request_uri_real;
			fastcgi_param REQUEST_URI $request_uri_real;
			fastcgi_param REQUEST_METHOD $request_method;
			fastcgi_param REMOTE_ADDR $remote_addr;
			fastcgi_param REMOTE_PORT $remote_port;
			fastcgi_param REMOTE_USER $remote_user;
			fastcgi_param CONTENT_TYPE $content_type;
			fastcgi_param CONTENT_LENGTH $content_length;

			# FastCGI configuration
        	fastcgi_split_path_info ^(.+\.php)(/.+)$;
			fastcgi_index index.php;
			fastcgi_next_upstream error timeout;
			fastcgi_keep_conn on;
			fastcgi_hide_header "X-Powered-By";

			# Request limit settings
			limit_req zone=reqPerSec10 burst=50 nodelay;
			limit_conn conPerIp 10;

			# Set upstream endpoint for PHP
			set $php_upstream_endpoint php-fpm:9000;

			# Configure name servers used to resolve names of upstream servers into addresses
			resolver 127.0.0.11 valid=5s;

			# Set the address of a FastCGI server
			fastcgi_pass $php_upstream_endpoint;
		}

		# Error page links
		error_page 404 /404.html;
		error_page 500 501 502 503 504 /50x.html;

		# Error page location matching
		location ~ [4-5][0-9][0-9].html {
			# Specifie that a given location can only be used for internal requests
			internal;

			# Disable access logging
			access_log off;
			log_not_found off;
		}

		# Client body size settings
		client_max_body_size 5M;
		client_body_buffer_size 5M;

		# Gzip configuration
		gzip on;
		gzip_http_version 1.0;
		gzip_min_length 256;
		gzip_buffers 4 8k;
		gzip_types
			text/css
			text/javascript
			text/xml
			text/plain
			text/x-component
			application/javascript
			application/x-javascript
			application/json
			application/xml
			application/rss+xml
			application/atom+xml
			font/truetype
			font/opentype
			application/vnd.ms-fontobject
			image/svg+xml;
		gzip_proxied expired no-cache no-store private auth;
		gzip_disable "msie6";
		gzip_vary on;
		gzip_comp_level 5;

		# Interceptor for not allowed methods
		if ($request_method !~ ^(OPTIONS|GET|HEAD|POST|PATCH|PUT|DELETE)$ ) {
			return 405;
		}

		# Request limiting settings
		limit_req zone=reqPerSec20 burst=100 nodelay;
		limit_conn conPerIp 20;

		# Location matching for special characters
		location ~ (?:/\..*|~)$ {
			# Deny all access
			deny all;

			# Disable access logging
			access_log off;
			log_not_found off;
		}

		# Match files with given extentions
		location ~* \.(?:manifest|appcache|html?|xml|json)$ {
			# Disable caching
			expires -1;
		}

		# Match files with given extentions
		location ~* \.(?:rss|atom)$ {
			# Cache settings
			expires 1h;
			sendfile on;
			tcp_nopush on;
			tcp_nodelay on;
			add_header Cache-Control "public";

			# Disable access logging
			access_log off;
			log_not_found off;
		}

		# Match files with given extentions
		location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webp|webm|htc)$ {
			# Cache settings
			expires 1M;
			sendfile on;
			tcp_nopush on;
			tcp_nodelay on;
			add_header Cache-Control "public";

			# Disable access logging
			access_log off;
			log_not_found off;
		}

		# Match files with given extentions
		location ~* \.(?:css|js|txt)$ {
			# Cache settings
			expires 1y;
			sendfile on;
			tcp_nopush on;
			tcp_nodelay on;
			add_header Cache-Control "public";

			# Disable access logging
			access_log off;
			log_not_found off;
		}

		# Match files with given extentions
		location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
			# Cache settings
			expires 1M;
			sendfile on;
			tcp_nopush on;
			tcp_nodelay on;
			add_header Cache-Control "public";

			# Disable access logging
			access_log off;
			log_not_found off;
		}
	}
}